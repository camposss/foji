// Code generated by foji {{ version }}, template: {{ templateFile }}; DO NOT EDIT.

package {{ .PackageName }}

import (
    "strings"

	"github.com/bir/iken/fastutil"
    "github.com/valyala/fasthttp"
)

type AuthFunc = func(ctx *fasthttp.RequestCtx)(*{{ $.CheckPackage $.Params.Auth .Params.Package }}, error)
type Authenticator = func(key string) (*{{ $.CheckPackage $.Params.Auth .Params.Package }}, error)

{{- range $security, $value := .File.API.Components.SecuritySchemes }}

func {{ pascal $security }}Auth(fn Authenticator) AuthFunc {
    return func (ctx *fasthttp.RequestCtx) (*{{ $.CheckPackage $.Params.Auth $.Params.Package }}, error){
    {{- if eq $value.Value.In "query" }}
        key, err := fastutil.QueryString(ctx, "{{$value.Value.Name}}")
        if err != nil {
            return nil, err
        }
    {{- else if eq $value.Value.Type "http" }}
        {{- if eq $value.Value.Scheme "bearer" }}
        b := ctx.Request.Header.Peek("Authorization")
        if len(b) == 0 {
            return nil, fastutil.ErrUnauthorized
        }

        key := string(b)
        if strings.HasPrefix(key, "Bearer "){
            key = key[7:]
        }
        {{- end }}
    {{- end }}

        return fn(key)
    }
}
{{- end -}}
