openapi: "3.0.0"
info:
  title: SimpleTodo
  version: 0.1.0
paths:
  /category:
    get:
      operationId: listCategory
      summary: List Category
      tags:
        - Category
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createCategory
      summary: Create Category
      tags:
        - Category
      responses:
        '201':
          description: |-
            200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /category/{id}:
    parameters:
      - name: id
        in: path
        description: id of Category
        required: true
        schema:
          type: integer
          format: int64

    get:
      description: Get Category
      operationId: getCategory
      summary: Get Category
      tags:
        - Category
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: updates a Category
      operationId: updateCategory
      summary: Update Category
      tags:
        - Category
      responses:
        '200':
          description: Category updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a Category
      operationId: deleteCategory
      summary: Delete Category
      tags:
        - Category
      responses:
        '204':
          description: Category deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /todo:
    get:
      operationId: listTodo
      summary: List Todo
      tags:
        - Todo
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todos'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTodo
      summary: Create Todo
      tags:
        - Todo
      responses:
        '201':
          description: |-
            200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'

  /todo/{id}:
    parameters:
      - name: id
        in: path
        description: id of Todo
        required: true
        schema:
          type: integer
          format: int64

    get:
      description: Get Todo
      operationId: getTodo
      summary: Get Todo
      tags:
        - Todo
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: updates a Todo
      operationId: updateTodo
      summary: Update Todo
      tags:
        - Todo
      responses:
        '200':
          description: Todo updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a Todo
      operationId: deleteTodo
      summary: Delete Todo
      tags:
        - Todo
      responses:
        '204':
          description: Todo deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  responses:
    BadRequest:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    limit:
      name: limit
      in: query
      description: How many items to return for each page
      required: false
      schema:
        type: integer
        format: int32
        default: 100
        maximum: 255
        minimum: 10
    offset:
      name: offset
      in: query
      description: Offset of page to return
      required: false
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
    Categories:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        totalRecordCount:
          type: integer
        list:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        position:
          type: integer
          format: int64
        label:
          type: string
        labelNullable:
          type: string
        minutes:
          type: integer
          format: int64
        minutesNullable:
          type: integer
          format: int64
        parameters:
          type: UNKNOWN:path(public.todo.parameters):type(jsonb)
        categoryID:
          type: integer
          format: int64
        expiresAt:
          type: string
          format: date-time
        dueAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
    Todos:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        totalRecordCount:
          type: integer
        list:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string